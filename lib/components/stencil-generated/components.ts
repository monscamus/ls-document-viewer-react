'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type LSApiElement, type LSMutateEvent, type LsDocumentViewerCustomEvent, type LsFieldAlignmentCustomEvent, type LsFieldDimensionsCustomEvent, type LsFieldDistributeCustomEvent, type LsFieldFormatCustomEvent, type LsFieldSizeCustomEvent, type LsParticipantManagerCustomEvent } from "legalesign-document-viewer";
import { LsDocumentOptions as LsDocumentOptionsElement, defineCustomElement as defineLsDocumentOptions } from "legalesign-document-viewer/dist/components/ls-document-options.js";
import { LsDocumentViewer as LsDocumentViewerElement, defineCustomElement as defineLsDocumentViewer } from "legalesign-document-viewer/dist/components/ls-document-viewer.js";
import { LsEditorField as LsEditorFieldElement, defineCustomElement as defineLsEditorField } from "legalesign-document-viewer/dist/components/ls-editor-field.js";
import { LsEditorTable as LsEditorTableElement, defineCustomElement as defineLsEditorTable } from "legalesign-document-viewer/dist/components/ls-editor-table.js";
import { LsFeatureColumn as LsFeatureColumnElement, defineCustomElement as defineLsFeatureColumn } from "legalesign-document-viewer/dist/components/ls-feature-column.js";
import { LsFieldAlignment as LsFieldAlignmentElement, defineCustomElement as defineLsFieldAlignment } from "legalesign-document-viewer/dist/components/ls-field-alignment.js";
import { LsFieldDimensions as LsFieldDimensionsElement, defineCustomElement as defineLsFieldDimensions } from "legalesign-document-viewer/dist/components/ls-field-dimensions.js";
import { LsFieldDistribute as LsFieldDistributeElement, defineCustomElement as defineLsFieldDistribute } from "legalesign-document-viewer/dist/components/ls-field-distribute.js";
import { LsFieldFormat as LsFieldFormatElement, defineCustomElement as defineLsFieldFormat } from "legalesign-document-viewer/dist/components/ls-field-format.js";
import { LsFieldPropertiesAutosign as LsFieldPropertiesAutosignElement, defineCustomElement as defineLsFieldPropertiesAutosign } from "legalesign-document-viewer/dist/components/ls-field-properties-autosign.js";
import { LsFieldPropertiesDate as LsFieldPropertiesDateElement, defineCustomElement as defineLsFieldPropertiesDate } from "legalesign-document-viewer/dist/components/ls-field-properties-date.js";
import { LsFieldPropertiesEmail as LsFieldPropertiesEmailElement, defineCustomElement as defineLsFieldPropertiesEmail } from "legalesign-document-viewer/dist/components/ls-field-properties-email.js";
import { LsFieldPropertiesFile as LsFieldPropertiesFileElement, defineCustomElement as defineLsFieldPropertiesFile } from "legalesign-document-viewer/dist/components/ls-field-properties-file.js";
import { LsFieldPropertiesGeneral as LsFieldPropertiesGeneralElement, defineCustomElement as defineLsFieldPropertiesGeneral } from "legalesign-document-viewer/dist/components/ls-field-properties-general.js";
import { LsFieldPropertiesImage as LsFieldPropertiesImageElement, defineCustomElement as defineLsFieldPropertiesImage } from "legalesign-document-viewer/dist/components/ls-field-properties-image.js";
import { LsFieldPropertiesMultiple as LsFieldPropertiesMultipleElement, defineCustomElement as defineLsFieldPropertiesMultiple } from "legalesign-document-viewer/dist/components/ls-field-properties-multiple.js";
import { LsFieldPropertiesNumber as LsFieldPropertiesNumberElement, defineCustomElement as defineLsFieldPropertiesNumber } from "legalesign-document-viewer/dist/components/ls-field-properties-number.js";
import { LsFieldPropertiesSignature as LsFieldPropertiesSignatureElement, defineCustomElement as defineLsFieldPropertiesSignature } from "legalesign-document-viewer/dist/components/ls-field-properties-signature.js";
import { LsFieldPropertiesText as LsFieldPropertiesTextElement, defineCustomElement as defineLsFieldPropertiesText } from "legalesign-document-viewer/dist/components/ls-field-properties-text.js";
import { LsFieldProperties as LsFieldPropertiesElement, defineCustomElement as defineLsFieldProperties } from "legalesign-document-viewer/dist/components/ls-field-properties.js";
import { LsFieldSize as LsFieldSizeElement, defineCustomElement as defineLsFieldSize } from "legalesign-document-viewer/dist/components/ls-field-size.js";
import { LsFormfield as LsFormfieldElement, defineCustomElement as defineLsFormfield } from "legalesign-document-viewer/dist/components/ls-formfield.js";
import { LsIcon as LsIconElement, defineCustomElement as defineLsIcon } from "legalesign-document-viewer/dist/components/ls-icon.js";
import { LsNumberInput as LsNumberInputElement, defineCustomElement as defineLsNumberInput } from "legalesign-document-viewer/dist/components/ls-number-input.js";
import { LsParticipantManager as LsParticipantManagerElement, defineCustomElement as defineLsParticipantManager } from "legalesign-document-viewer/dist/components/ls-participant-manager.js";
import { LsParticipantSelect as LsParticipantSelectElement, defineCustomElement as defineLsParticipantSelect } from "legalesign-document-viewer/dist/components/ls-participant-select.js";
import { LsRadioInput as LsRadioInputElement, defineCustomElement as defineLsRadioInput } from "legalesign-document-viewer/dist/components/ls-radio-input.js";
import { LsSelectInput as LsSelectInputElement, defineCustomElement as defineLsSelectInput } from "legalesign-document-viewer/dist/components/ls-select-input.js";
import { LsStatusbar as LsStatusbarElement, defineCustomElement as defineLsStatusbar } from "legalesign-document-viewer/dist/components/ls-statusbar.js";
import { LsTextInput as LsTextInputElement, defineCustomElement as defineLsTextInput } from "legalesign-document-viewer/dist/components/ls-text-input.js";
import { LsTextareaInput as LsTextareaInputElement, defineCustomElement as defineLsTextareaInput } from "legalesign-document-viewer/dist/components/ls-textarea-input.js";
import { LsToolbar as LsToolbarElement, defineCustomElement as defineLsToolbar } from "legalesign-document-viewer/dist/components/ls-toolbar.js";
import { LsToolboxField as LsToolboxFieldElement, defineCustomElement as defineLsToolboxField } from "legalesign-document-viewer/dist/components/ls-toolbox-field.js";
import React from 'react';

export type LsDocumentOptionsEvents = NonNullable<unknown>;

export const LsDocumentOptions: StencilReactComponent<LsDocumentOptionsElement, LsDocumentOptionsEvents> = /*@__PURE__*/ createComponent<LsDocumentOptionsElement, LsDocumentOptionsEvents>({
    tagName: 'ls-document-options',
    elementClass: LsDocumentOptionsElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsDocumentOptionsEvents,
    defineCustomElement: defineLsDocumentOptions
});

export type LsDocumentViewerEvents = {
    onPageRendered: EventName<CustomEvent<number>>,
    onPageChange: EventName<CustomEvent<number>>,
    onSelectFields: EventName<LsDocumentViewerCustomEvent<LSApiElement[]>>,
    onMutate: EventName<LsDocumentViewerCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsDocumentViewerCustomEvent<LSMutateEvent[]>>
};

export const LsDocumentViewer: StencilReactComponent<LsDocumentViewerElement, LsDocumentViewerEvents> = /*@__PURE__*/ createComponent<LsDocumentViewerElement, LsDocumentViewerEvents>({
    tagName: 'ls-document-viewer',
    elementClass: LsDocumentViewerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onPageRendered: 'pageRendered',
        onPageChange: 'pageChange',
        onSelectFields: 'selectFields',
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsDocumentViewerEvents,
    defineCustomElement: defineLsDocumentViewer
});

export type LsEditorFieldEvents = NonNullable<unknown>;

export const LsEditorField: StencilReactComponent<LsEditorFieldElement, LsEditorFieldEvents> = /*@__PURE__*/ createComponent<LsEditorFieldElement, LsEditorFieldEvents>({
    tagName: 'ls-editor-field',
    elementClass: LsEditorFieldElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsEditorFieldEvents,
    defineCustomElement: defineLsEditorField
});

export type LsEditorTableEvents = NonNullable<unknown>;

export const LsEditorTable: StencilReactComponent<LsEditorTableElement, LsEditorTableEvents> = /*@__PURE__*/ createComponent<LsEditorTableElement, LsEditorTableEvents>({
    tagName: 'ls-editor-table',
    elementClass: LsEditorTableElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsEditorTableEvents,
    defineCustomElement: defineLsEditorTable
});

export type LsFeatureColumnEvents = { onManage: EventName<CustomEvent<'document' | 'toolbox' | 'participant'>> };

export const LsFeatureColumn: StencilReactComponent<LsFeatureColumnElement, LsFeatureColumnEvents> = /*@__PURE__*/ createComponent<LsFeatureColumnElement, LsFeatureColumnEvents>({
    tagName: 'ls-feature-column',
    elementClass: LsFeatureColumnElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onManage: 'manage' } as LsFeatureColumnEvents,
    defineCustomElement: defineLsFeatureColumn
});

export type LsFieldAlignmentEvents = {
    onMutate: EventName<LsFieldAlignmentCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsFieldAlignmentCustomEvent<LSMutateEvent[]>>
};

export const LsFieldAlignment: StencilReactComponent<LsFieldAlignmentElement, LsFieldAlignmentEvents> = /*@__PURE__*/ createComponent<LsFieldAlignmentElement, LsFieldAlignmentEvents>({
    tagName: 'ls-field-alignment',
    elementClass: LsFieldAlignmentElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsFieldAlignmentEvents,
    defineCustomElement: defineLsFieldAlignment
});

export type LsFieldDimensionsEvents = {
    onMutate: EventName<LsFieldDimensionsCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsFieldDimensionsCustomEvent<LSMutateEvent[]>>
};

export const LsFieldDimensions: StencilReactComponent<LsFieldDimensionsElement, LsFieldDimensionsEvents> = /*@__PURE__*/ createComponent<LsFieldDimensionsElement, LsFieldDimensionsEvents>({
    tagName: 'ls-field-dimensions',
    elementClass: LsFieldDimensionsElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsFieldDimensionsEvents,
    defineCustomElement: defineLsFieldDimensions
});

export type LsFieldDistributeEvents = {
    onMutate: EventName<LsFieldDistributeCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsFieldDistributeCustomEvent<LSMutateEvent[]>>
};

export const LsFieldDistribute: StencilReactComponent<LsFieldDistributeElement, LsFieldDistributeEvents> = /*@__PURE__*/ createComponent<LsFieldDistributeElement, LsFieldDistributeEvents>({
    tagName: 'ls-field-distribute',
    elementClass: LsFieldDistributeElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsFieldDistributeEvents,
    defineCustomElement: defineLsFieldDistribute
});

export type LsFieldFormatEvents = {
    onMutate: EventName<LsFieldFormatCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsFieldFormatCustomEvent<LSMutateEvent[]>>
};

export const LsFieldFormat: StencilReactComponent<LsFieldFormatElement, LsFieldFormatEvents> = /*@__PURE__*/ createComponent<LsFieldFormatElement, LsFieldFormatEvents>({
    tagName: 'ls-field-format',
    elementClass: LsFieldFormatElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsFieldFormatEvents,
    defineCustomElement: defineLsFieldFormat
});

export type LsFieldPropertiesEvents = NonNullable<unknown>;

export const LsFieldProperties: StencilReactComponent<LsFieldPropertiesElement, LsFieldPropertiesEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesElement, LsFieldPropertiesEvents>({
    tagName: 'ls-field-properties',
    elementClass: LsFieldPropertiesElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesEvents,
    defineCustomElement: defineLsFieldProperties
});

export type LsFieldPropertiesAutosignEvents = NonNullable<unknown>;

export const LsFieldPropertiesAutosign: StencilReactComponent<LsFieldPropertiesAutosignElement, LsFieldPropertiesAutosignEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesAutosignElement, LsFieldPropertiesAutosignEvents>({
    tagName: 'ls-field-properties-autosign',
    elementClass: LsFieldPropertiesAutosignElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesAutosignEvents,
    defineCustomElement: defineLsFieldPropertiesAutosign
});

export type LsFieldPropertiesDateEvents = NonNullable<unknown>;

export const LsFieldPropertiesDate: StencilReactComponent<LsFieldPropertiesDateElement, LsFieldPropertiesDateEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesDateElement, LsFieldPropertiesDateEvents>({
    tagName: 'ls-field-properties-date',
    elementClass: LsFieldPropertiesDateElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesDateEvents,
    defineCustomElement: defineLsFieldPropertiesDate
});

export type LsFieldPropertiesEmailEvents = NonNullable<unknown>;

export const LsFieldPropertiesEmail: StencilReactComponent<LsFieldPropertiesEmailElement, LsFieldPropertiesEmailEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesEmailElement, LsFieldPropertiesEmailEvents>({
    tagName: 'ls-field-properties-email',
    elementClass: LsFieldPropertiesEmailElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesEmailEvents,
    defineCustomElement: defineLsFieldPropertiesEmail
});

export type LsFieldPropertiesFileEvents = NonNullable<unknown>;

export const LsFieldPropertiesFile: StencilReactComponent<LsFieldPropertiesFileElement, LsFieldPropertiesFileEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesFileElement, LsFieldPropertiesFileEvents>({
    tagName: 'ls-field-properties-file',
    elementClass: LsFieldPropertiesFileElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesFileEvents,
    defineCustomElement: defineLsFieldPropertiesFile
});

export type LsFieldPropertiesGeneralEvents = NonNullable<unknown>;

export const LsFieldPropertiesGeneral: StencilReactComponent<LsFieldPropertiesGeneralElement, LsFieldPropertiesGeneralEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesGeneralElement, LsFieldPropertiesGeneralEvents>({
    tagName: 'ls-field-properties-general',
    elementClass: LsFieldPropertiesGeneralElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesGeneralEvents,
    defineCustomElement: defineLsFieldPropertiesGeneral
});

export type LsFieldPropertiesImageEvents = NonNullable<unknown>;

export const LsFieldPropertiesImage: StencilReactComponent<LsFieldPropertiesImageElement, LsFieldPropertiesImageEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesImageElement, LsFieldPropertiesImageEvents>({
    tagName: 'ls-field-properties-image',
    elementClass: LsFieldPropertiesImageElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesImageEvents,
    defineCustomElement: defineLsFieldPropertiesImage
});

export type LsFieldPropertiesMultipleEvents = NonNullable<unknown>;

export const LsFieldPropertiesMultiple: StencilReactComponent<LsFieldPropertiesMultipleElement, LsFieldPropertiesMultipleEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesMultipleElement, LsFieldPropertiesMultipleEvents>({
    tagName: 'ls-field-properties-multiple',
    elementClass: LsFieldPropertiesMultipleElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesMultipleEvents,
    defineCustomElement: defineLsFieldPropertiesMultiple
});

export type LsFieldPropertiesNumberEvents = NonNullable<unknown>;

export const LsFieldPropertiesNumber: StencilReactComponent<LsFieldPropertiesNumberElement, LsFieldPropertiesNumberEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesNumberElement, LsFieldPropertiesNumberEvents>({
    tagName: 'ls-field-properties-number',
    elementClass: LsFieldPropertiesNumberElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesNumberEvents,
    defineCustomElement: defineLsFieldPropertiesNumber
});

export type LsFieldPropertiesSignatureEvents = NonNullable<unknown>;

export const LsFieldPropertiesSignature: StencilReactComponent<LsFieldPropertiesSignatureElement, LsFieldPropertiesSignatureEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesSignatureElement, LsFieldPropertiesSignatureEvents>({
    tagName: 'ls-field-properties-signature',
    elementClass: LsFieldPropertiesSignatureElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesSignatureEvents,
    defineCustomElement: defineLsFieldPropertiesSignature
});

export type LsFieldPropertiesTextEvents = NonNullable<unknown>;

export const LsFieldPropertiesText: StencilReactComponent<LsFieldPropertiesTextElement, LsFieldPropertiesTextEvents> = /*@__PURE__*/ createComponent<LsFieldPropertiesTextElement, LsFieldPropertiesTextEvents>({
    tagName: 'ls-field-properties-text',
    elementClass: LsFieldPropertiesTextElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFieldPropertiesTextEvents,
    defineCustomElement: defineLsFieldPropertiesText
});

export type LsFieldSizeEvents = {
    onMutate: EventName<LsFieldSizeCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsFieldSizeCustomEvent<LSMutateEvent[]>>
};

export const LsFieldSize: StencilReactComponent<LsFieldSizeElement, LsFieldSizeEvents> = /*@__PURE__*/ createComponent<LsFieldSizeElement, LsFieldSizeEvents>({
    tagName: 'ls-field-size',
    elementClass: LsFieldSizeElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsFieldSizeEvents,
    defineCustomElement: defineLsFieldSize
});

export type LsFormfieldEvents = NonNullable<unknown>;

export const LsFormfield: StencilReactComponent<LsFormfieldElement, LsFormfieldEvents> = /*@__PURE__*/ createComponent<LsFormfieldElement, LsFormfieldEvents>({
    tagName: 'ls-formfield',
    elementClass: LsFormfieldElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsFormfieldEvents,
    defineCustomElement: defineLsFormfield
});

export type LsIconEvents = NonNullable<unknown>;

export const LsIcon: StencilReactComponent<LsIconElement, LsIconEvents> = /*@__PURE__*/ createComponent<LsIconElement, LsIconEvents>({
    tagName: 'ls-icon',
    elementClass: LsIconElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsIconEvents,
    defineCustomElement: defineLsIcon
});

export type LsNumberInputEvents = NonNullable<unknown>;

export const LsNumberInput: StencilReactComponent<LsNumberInputElement, LsNumberInputEvents> = /*@__PURE__*/ createComponent<LsNumberInputElement, LsNumberInputEvents>({
    tagName: 'ls-number-input',
    elementClass: LsNumberInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsNumberInputEvents,
    defineCustomElement: defineLsNumberInput
});

export type LsParticipantManagerEvents = {
    onMutate: EventName<LsParticipantManagerCustomEvent<LSMutateEvent[]>>,
    onUpdate: EventName<LsParticipantManagerCustomEvent<LSMutateEvent[]>>
};

export const LsParticipantManager: StencilReactComponent<LsParticipantManagerElement, LsParticipantManagerEvents> = /*@__PURE__*/ createComponent<LsParticipantManagerElement, LsParticipantManagerEvents>({
    tagName: 'ls-participant-manager',
    elementClass: LsParticipantManagerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onMutate: 'mutate',
        onUpdate: 'update'
    } as LsParticipantManagerEvents,
    defineCustomElement: defineLsParticipantManager
});

export type LsParticipantSelectEvents = NonNullable<unknown>;

export const LsParticipantSelect: StencilReactComponent<LsParticipantSelectElement, LsParticipantSelectEvents> = /*@__PURE__*/ createComponent<LsParticipantSelectElement, LsParticipantSelectEvents>({
    tagName: 'ls-participant-select',
    elementClass: LsParticipantSelectElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsParticipantSelectEvents,
    defineCustomElement: defineLsParticipantSelect
});

export type LsRadioInputEvents = NonNullable<unknown>;

export const LsRadioInput: StencilReactComponent<LsRadioInputElement, LsRadioInputEvents> = /*@__PURE__*/ createComponent<LsRadioInputElement, LsRadioInputEvents>({
    tagName: 'ls-radio-input',
    elementClass: LsRadioInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsRadioInputEvents,
    defineCustomElement: defineLsRadioInput
});

export type LsSelectInputEvents = NonNullable<unknown>;

export const LsSelectInput: StencilReactComponent<LsSelectInputElement, LsSelectInputEvents> = /*@__PURE__*/ createComponent<LsSelectInputElement, LsSelectInputEvents>({
    tagName: 'ls-select-input',
    elementClass: LsSelectInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsSelectInputEvents,
    defineCustomElement: defineLsSelectInput
});

export type LsStatusbarEvents = NonNullable<unknown>;

export const LsStatusbar: StencilReactComponent<LsStatusbarElement, LsStatusbarEvents> = /*@__PURE__*/ createComponent<LsStatusbarElement, LsStatusbarEvents>({
    tagName: 'ls-statusbar',
    elementClass: LsStatusbarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsStatusbarEvents,
    defineCustomElement: defineLsStatusbar
});

export type LsTextInputEvents = NonNullable<unknown>;

export const LsTextInput: StencilReactComponent<LsTextInputElement, LsTextInputEvents> = /*@__PURE__*/ createComponent<LsTextInputElement, LsTextInputEvents>({
    tagName: 'ls-text-input',
    elementClass: LsTextInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsTextInputEvents,
    defineCustomElement: defineLsTextInput
});

export type LsTextareaInputEvents = NonNullable<unknown>;

export const LsTextareaInput: StencilReactComponent<LsTextareaInputElement, LsTextareaInputEvents> = /*@__PURE__*/ createComponent<LsTextareaInputElement, LsTextareaInputEvents>({
    tagName: 'ls-textarea-input',
    elementClass: LsTextareaInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsTextareaInputEvents,
    defineCustomElement: defineLsTextareaInput
});

export type LsToolbarEvents = NonNullable<unknown>;

export const LsToolbar: StencilReactComponent<LsToolbarElement, LsToolbarEvents> = /*@__PURE__*/ createComponent<LsToolbarElement, LsToolbarEvents>({
    tagName: 'ls-toolbar',
    elementClass: LsToolbarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsToolbarEvents,
    defineCustomElement: defineLsToolbar
});

export type LsToolboxFieldEvents = NonNullable<unknown>;

export const LsToolboxField: StencilReactComponent<LsToolboxFieldElement, LsToolboxFieldEvents> = /*@__PURE__*/ createComponent<LsToolboxFieldElement, LsToolboxFieldEvents>({
    tagName: 'ls-toolbox-field',
    elementClass: LsToolboxFieldElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as LsToolboxFieldEvents,
    defineCustomElement: defineLsToolboxField
});
